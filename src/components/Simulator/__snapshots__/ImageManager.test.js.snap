// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`render image manager component tests has one instance of image manager 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <WithStyles(ImageManager)
    applySection={false}
    handleBulbPopoverClose={[Function]}
    handleBulbPopoverOpen={[Function]}
    handleHeartPopoverClose={[Function]}
    handleHeartPopoverOpen={[Function]}
    handleHeringPopoverClose={[Function]}
    handleHeringPopoverOpen={[Function]}
    handleParaSympaPopoverClose={[Function]}
    handleParaSympaPopoverOpen={[Function]}
    handlePopoverClose={[Function]}
    handlePopoverOpen={[Function]}
    handleSection={[Function]}
    handleSpinalPopoverClose={[Function]}
    handleSpinalPopoverOpen={[Function]}
    handleSympateticPopoverClose={[Function]}
    handleSympateticPopoverOpen={[Function]}
    heartBeat={false}
    pressure={false}
    t={[Function]}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "applySection": false,
      "classes": Object {
        "paper": "ImageManager-paper-2",
        "popover": "ImageManager-popover-1",
      },
      "handleBulbPopoverClose": [Function],
      "handleBulbPopoverOpen": [Function],
      "handleHeartPopoverClose": [Function],
      "handleHeartPopoverOpen": [Function],
      "handleHeringPopoverClose": [Function],
      "handleHeringPopoverOpen": [Function],
      "handleParaSympaPopoverClose": [Function],
      "handleParaSympaPopoverOpen": [Function],
      "handlePopoverClose": [Function],
      "handlePopoverOpen": [Function],
      "handleSection": [Function],
      "handleSpinalPopoverClose": [Function],
      "handleSpinalPopoverOpen": [Function],
      "handleSympateticPopoverClose": [Function],
      "handleSympateticPopoverOpen": [Function],
      "heartBeat": false,
      "pressure": false,
      "t": [Function],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "applySection": false,
        "classes": Object {
          "paper": "ImageManager-paper-2",
          "popover": "ImageManager-popover-1",
        },
        "handleBulbPopoverClose": [Function],
        "handleBulbPopoverOpen": [Function],
        "handleHeartPopoverClose": [Function],
        "handleHeartPopoverOpen": [Function],
        "handleHeringPopoverClose": [Function],
        "handleHeringPopoverOpen": [Function],
        "handleParaSympaPopoverClose": [Function],
        "handleParaSympaPopoverOpen": [Function],
        "handlePopoverClose": [Function],
        "handlePopoverOpen": [Function],
        "handleSection": [Function],
        "handleSpinalPopoverClose": [Function],
        "handleSpinalPopoverOpen": [Function],
        "handleSympateticPopoverClose": [Function],
        "handleSympateticPopoverOpen": [Function],
        "heartBeat": false,
        "pressure": false,
        "t": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
